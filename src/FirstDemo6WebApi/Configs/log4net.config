<?xml version="1.0" encoding="utf-8" ?>
<log4net>
	<root>
		<level value="ALL" />
		<appender-ref ref="SysAppender" />
		<appender-ref ref="ConsoleAppender" />
	</root>
	<logger name="TestLogger">
		<level value="DEBUG"/>
	</logger>
	<appender name="SysAppender" type="log4net.Appender.RollingFileAppender" >
		<!--是否追加到文件:日志文件路径,文件夹不存在则新建 -->
		<param name="File" value="D:\Log4Net\log\" />
		<!--是否追加到文件-->
		<param name="AppendToFile" value="true" />
		<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!--使用Unicode编码-->
		<Encoding value="UTF-8" />
		<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
		<param name="MaxSizeRollBackups" value="10" />
		<!--是否只写到一个文件中-->
		<param name="StaticLogFileName" value="false" />
		<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
		<param name="RollingStyle" value="Composite" />
		<!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
		<!--此处按日期产生文件夹，文件名固定。注意" 的位置-->
		<param name="DatePattern" value="yyyy-MM-dd'.txt'" />
		<!--这是按日期产生文件夹，并在文件名前也加上日期-->
		<!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd"-TimerServer.log""  />-->
		<!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
		<!--<param name="DatePattern" value="yyyyMMdd/"TimerServer/TimerServer.log""  />-->
		<!--每个文件的大小:只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
		<param name="maximumFileSize" value="10MB" />
		<!--计数类型为1，2，3…-->
		<!--<param name="CountDirection" value="1"/>-->
		
		<!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
		<layout type="log4net.Layout.PatternLayout">
			<!--<param name="Header" value="[Header] "/>
			<param name="Footer" value="[Footer] "/>-->
			<param name="ConversionPattern" value="%date [%thread] %-5level| %logger - %message%newline" />
		</layout>
		<!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
		<!--用自定义布局测试失败-->
		<!--此处用继承了log4net.Layout.PatternLayout的自定义布局，TGLog.ExpandLayout2为命名空间。%property{Operator}、%property{Action}是自定义的输出-->
		<!--<layout type="TGLog.ExpandLayout2.ReflectionLayout,TGLog">
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger     操作者ID：%property{Operator} 操作类型：%property{Action}%n             当前机器名:%property%n当前机器名及登录用户：%username %n               记录位置：%location%n 消息描述：%property{Message}%n                    异常：%exception%n 消息：%message%newline%n%n" />
      </layout>-->
		<!--过滤设置，LevelRangeFilter为使用的过滤器-->
		<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="ALL" />
			<param name="LevelMax" value="FATAL" />
		</filter>
	</appender>
	<appender name="ConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
		<mapping>
			<level value="ERROR" />
			<foreColor value="Red" />
		</mapping>
		<mapping>
			<level value="WARN" />
			<foreColor value="Yellow" />
		</mapping>
		<mapping>
			<level value="INFO" />
			<foreColor value="White" />
		</mapping>
		<mapping>
			<level value="DEBUG" />
			<foreColor value="Green" />
		</mapping>
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date %5level %logger.%method [%property{eventId}] [%line] - MESSAGE: %message%newline %exception" />
		</layout>
	</appender>

	<!--type表示用什么类型记录日志 ADONetAppender代表用数据库记录-->
	<!--<appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
		--><!--日志缓存写入条数 如果为0则立刻写入数据库--><!--
		<bufferSize value="0"/>

		--><!--日志数据库连接串--><!--
		<connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />

		--><!--数据库连接字符串--><!--
		<connectionString value="Data Source=.;Initial Catalog=stuDb;User ID=sa;password=123456"/>

		--><!--日志数据库脚本--><!--
		<commandText value="insert into LogDetails (LogDate,LogLevel,Thread,Logger,LogMessage) values (@log_date,@log_level,@thread,@logger,@message)"/>

		--><!--日志时间 RawTimeStampLayout是log4net提供的参数--><!--
		<parameter>
			<parameterName value="@log_date"/>
			<dbType value="DateTime"/>
			<layout type="log4net.Layout.RawTimeStampLayout"/>
		</parameter>

		--><!--日志级别--><!--
		<parameter>
			<parameterName value="@log_level"/>
			<dbType value="String"/>
			<size value="20"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%p" />
			</layout>
		</parameter>

		--><!--线程ID--><!--
		<parameter>
			<parameterName value="@thread"/>
			<dbType value="String"/>
			<size value="100"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%thread" />
			</layout>
		</parameter>

		--><!--日志名称--><!--
		<parameter>
			<parameterName value="@logger"/>
			<dbType value="String"/>
			<size value="500"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%logger" />
			</layout>
		</parameter>

		--><!--日志内容--><!--
		<parameter>
			<parameterName value="@message"/>
			<dbType value="String"/>
			<size value="3000"/>
			<layout type="Log4NetToSqlServer.Utility.CustomLayout">
				<conversionPattern value="%property{Message}" />
			</layout>
		</parameter>

	</appender>-->
</log4net>